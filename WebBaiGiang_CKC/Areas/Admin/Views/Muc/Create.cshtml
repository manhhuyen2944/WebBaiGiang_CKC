@model WebBaiGiang_CKC.Models.Muc

@{
    ViewData["Title"] = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
    var ChuongId = @ViewBag.ChuongId;
    var BaiId = @ViewBag.BaiId;
}
<ol class="breadcrumb">

    <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Trang chủ</a></li>
    <li class="breadcrumb-item"><a asp-controller="Muc" asp-action="Index">Quản lý nội dung</a></li>
    <li class="breadcrumb-item"><a asp-controller="Muc" asp-action="Create">Thêm</a></li>
</ol>
<h1 style="text-align: center;">THÊM NỘI DUNG</h1>

<hr />
<div class="row">

    <form asp-action="Create" asp-controller="Muc" asp-area="Admin" method="post" enctype="multipart/form-data">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <br />

        <div class="form-group flex-grow-1 mx-4">
            <label class="form-label">Chương <span id="ChuongDisplay"></span></label>
            <select asp-items="ChuongId" class="form-select w-100" onchange="showChuongInfo(this)">
                <option value="">-- Chọn chương học --</option>
            </select>
        </div>
        <br />
        <div class="form-group flex-grow-1 mx-4">
            <label asp-for="BaiId" class="form-label">Bài <span id="ChuongDisplay"></span></label>
            <select asp-for="BaiId" asp-items="BaiId" class="form-select w-100">
                <option value="">-- Chọn bài học --</option>
            </select>
        </div>

        <br />
        <div class="form-group flex-grow-1 mx-4">
            <label asp-for="TenMuc" class="control-label"></label>
            <input asp-for="TenMuc" class="form-control w-100" />
            <span asp-validation-for="TenMuc" class="text-danger"></span>
        </div>
        <br />
        <div class="form-group flex-grow-1 mx-4">
            <label asp-for="MucSo" class="control-label"></label>
            <input asp-for="MucSo" class="form-control w-100" />
            <span asp-validation-for="MucSo" class="text-danger"></span>
        </div>
        <br />
        <div class="form-group flex-grow-1 mx-4">
            <label class="custom-control-label col-md-2" asp-for="NoiDung" class="control-label" for="htmlelementid">Nội Dung</label>
            <textarea name="NoiDung" id="htmlelementid" style="max-width:auto" class="form-control" asp-for="NoiDung"></textarea>
            <span asp-validation-for="NoiDung" class="text-danger"></span>
        </div>

        <br>
        <div class="form-group flex-grow-1 mx-4">
            <input type="submit" value="Thêm" class="btn btn-primary" />

            <a class="btn btn-secondary" asp-action="Index">Quay Lại</a>
        </div>
    </form>

</div>

@section scripts{
    <script>
        (function (factory) {
            if (typeof define === 'function' && define.amd) {
                define(['jquery'], factory);
            }
            else if (typeof module === 'object' && module.exports) {
                module.exports = factory(require('jquery'));
            } else {
                factory(window.jQuery);
            }
        }(function ($) {
            $.extend($.summernote.plugins, {
                // Tạo plugin tên elfinder
                'elfinder': function (context) {
                    var self = this;
                    // ui has renders to build ui elements.
                    var ui = $.summernote.ui;
                    // Tạo nút bấm
                    context.memo('button.elfinder', function () {
                        var button = ui.button({
                            contents: '<i class="note-icon-picture"/> elFinder',
                            tooltip: 'Quản lý file',
                            click: function () {
                                // Bấm vào nút bấm gọi hàm elfinderDialog
                                elfinderDialog(context);
                            }
                        });
                        // create jQuery object from button instance.
                        var $elfinder = button.render();
                        return $elfinder;
                    });
                    // This methods will be called when editor is destroyed by $('..').summernote('destroy');
                    // You should remove elements on `initialize`.
                    this.destroy = function () {
                        this.$panel.remove();
                        this.$panel = null;
                    };
                }

            });
        }));
        function elfinderDialog(editor) {
            var fm = $('<div/>').dialogelfinder({
                baseUrl: "@Url.Content("~/lib/elfinder/")",
                url: "@Url.Action("Connector","HinhAnh", new {Area ="Admin"})",
                lang: 'vi',
                width: 840,
                height: 450,
                destroyOnClose: true,
                getFileCallback: function (files, fm) {
                    console.log(files);
                    editor.invoke('editor.insertImage', files.url);
                },
                commandsOptions: {
                    getfile: {
                        oncomplete: 'close',
                        folders: false
                    }
                }
            }).dialogelfinder('instance');
        }
        $(document).ready(function () {
            $('#htmlelementid').summernote({

                height: 700,
                toolbar: [
                    ['style', ['style']],
                    ['font', ['bold', 'underline', 'clear']],
                    ['fontsize', ['fontsize']],
                    ['fontname', ['fontname']],
                    ['color', ['color']],
                    ['para', ['ul', 'ol', 'paragraph']],
                    ['table', ['table']],
                    ['insert', ['link', 'picture', 'video', 'elfinder']],
                    ['view', ['fullscreen', 'codeview', 'help']],
                ],

            });
        });

        function showChuongInfo(selectElement) {
            var selectedChuong = selectElement.options[selectElement.selectedIndex].text;
            document.getElementById("ChuongDisplay").innerHTML = " - " + selectedChuong;
            var chuongId = selectElement.value;
            var baiSelect = $("#BaiId");
            baiSelect.empty();
            if (!chuongId || chuongId === "-- Chọn chương học --") {
                baiSelect.append($('<option></option>').val('').text('-- Chọn bài học --'));
                baiSelect.attr('disabled', true);
                return;
            } else {
                baiSelect.attr('disabled', false);
                $.ajax({
                    type: "GET",
                    url: "/Admin/Muc/GetBaiByChuongId",
                    data: { chuongId: chuongId },
                    success: function (data) {
                        if (data.length === 0) {
                            baiSelect.append($('<option></option>').val('').text('-- Không có bài học --'));
                        } else {

                            $.each(data, function (index, bai) {
                                baiSelect.append($('<option></option>').val(bai.baiId).html(bai.tenBai));
                            });
                        }
                    },
                    error: function () {
                        alert("Failed to get Bai by Chuong");
                    }
                });
            }
        }
    </script>
}